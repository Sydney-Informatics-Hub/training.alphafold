# Copyright 2021 DeepMind Technologies Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Modifications for Sydney Uni:
# Set base image to be ubuntu 16.04 and cuda10.2 to run on our HPC
# contact sih.info@sydney.edu.au
# Conda version now hardcoded.
#
# Build with:
# sudo docker build -t sydneyinformaticshub/alphafold .
# python -c "import tensorflow as tf; print(len(tf.config.list_physical_devices('GPU')))"
#
# Push with:
# sudo docker push sydneyinformaticshub/alphafold
#
# Run with:
# sudo docker run -it --gpus=all sydneyinformaticshub/alphafold /bin/bash -c "python /app/alphafold/alphafold-2.3.2/run_alphafold.py \
#   --data_dir=${ALPHADB} \
#   --uniref90_database_path=${ALPHADB}/uniref90/uniref90.fasta \
#   --mgnify_database_path=${ALPHADB}/mgnify/mgy_clusters_2018_12.fa \
#   --template_mmcif_dir=${ALPHADB}/pdb_mmcif/mmcif_files/ \
#   --obsolete_pdbs_path=${ALPHADB}/pdb_mmcif/obsolete.dat \
#   --fasta_paths=/project/Training/DATA/input.fasta \
#   --output_dir=${WORKDIR}/output_directory_gpu \
#   --db_preset=full_dbs \
#   --max_template_date=2022-03-23 \
#   --use_gpu_relax=True \
#   --model_preset=monomer \
#   --pdb70_database_path=${ALPHADB}/pdb70/pdb70 \
#   --bfd_database_path=${ALPHADB}/bfd/bfd_metaclust_clu_complete_id30_c90_final_seq.sorted_opt \
#   --uniref30_database_path=${ALPHADB}/uniclust30/uniclust30_2018_08/uniclust30_2018_0 \
#  "
# export SINGULARITY_CACHEDIR=`pwd`
# export SINGULARITY_TMPDIR=`pwd`
# singularity build alpha.img docker://sydneyinformaticshub/alphafold

FROM nbutter/pytorch:ubuntu1604

# Install Miniconda package manager.
RUN wget -q -P /tmp \
  https://repo.anaconda.com/miniconda/Miniconda3-py38_23.5.2-0-Linux-x86_64.sh \
    && bash /tmp/Miniconda3-py38_23.5.2-0-Linux-x86_64.sh -b -p /opt/conda \
    && rm /tmp/Miniconda3-py38_23.5.2-0-Linux-x86_64.sh

# Install conda/pip packages.
ENV PATH="/opt/conda/bin:$PATH"

RUN conda install -y pip
RUN conda install -c conda-forge python=3.8 openmm==7.5.0 cudatoolkit==10.2.89 pdbfixer -y
RUN conda install -c conda-forge -c bioconda kalign2=2.04 hhsuite=3.3.0 mmseqs2=14.7e284 -y
RUN pip install --no-warn-conflicts "colabfold[alphafold-minus-jax] @ git+https://github.com/sokrypton/ColabFold@b95214bd97e3e55aa73fafbc5eacdf19abccebe6" tensorflow
RUN pip install https://storage.googleapis.com/jax-releases/cuda102/jaxlib-0.1.71+cuda102-cp38-none-manylinux2010_x86_64.whl
RUN pip install jax==0.1.71 chex biopython
RUN python -m colabfold.download
RUN pip install -U jax==0.3.25
# Use 'Agg' for non-GUI backend
# cd ${COLABFOLDDIR}/colabfold-conda/lib/python3.10/site-packages/colabfold
# sed -i -e "s#from matplotlib import pyplot as plt#import matplotlib\nmatplotlib.use('Agg')\nimport matplotlib.pyplot as plt#g" plot.py
# modify the default params directory
# sed -i -e "s#appdirs.user_cache_dir(__package__ or \"colabfold\")#\"${COLABFOLDDIR}/colabfold\"#g" download.py
# remove cache directory
# rm -rf __pycache__
