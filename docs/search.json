[
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Setup",
    "section": "",
    "text": "To connect to Artemis HPC, and follow this lesson, you will need a ‘terminal emulator’ program installed on your computer. Often just called a ‘terminal’, or ‘shell terminal’, ‘shell client’, terminal emulators give you a window with a command line interface through which you can send commands to be executed by your computer.\n\n\nIf you use Linux, then chances are you already know your shell and how to use it. Basically, just open your preferred terminal program and off you go! An X-Window server (X11) may also be useful if you want to be able to use GUIs; again, if you’re using Linux you probably have one, and if you don’t have one, it’s probably because you intentionally disabled it!\nConnection to Artemis can be made via ssh by issuing the following command on the shell:\nssh -X &lt;unikey&gt;@hpc.sydney.edu.au\n\n\n\nMac operating systems come with a terminal program, called Terminal. Just look for it in your Applications folder, or hit Command-Space and type ‘terminal’.\n\n\n\nTerminal is OSX’s native terminal emulator.\n\n\n\nWe also recommend installing XQuartz, which will replace OSX’s native X-Window server. XQuartz has some extra features that may offer better performance when using GUI programs. You’ll need to log out and back in again after installing XQuartz in order for it to activate.\nConnection to Artemis can be made via ssh by issuing the following command in the terminal:\nssh -X &lt;unikey&gt;@hpc.sydney.edu.au\n\n\n\nIf you’re using a Windows machine, don’t panic! You might not have used ‘CMD’ since Windows 95 but, rest assured, Windows still has a couple of terminal programs and shells buried in the Programs menu. However, those aren’t going to work for us, as you’ll need extra programs and utilities to connect to Artemis, such as an SSH implementation. To use Artemis on Windows, you have a couple of options:\n\n\nPuTTY, an SSH and telnet client, is another good simple option. However, note that PuTTY does not provide an X11 server, so you won’t be able to use GUI programs on Artemis with just PuTTY.\nHead to the PuTTY Website and download PuTTY. You can install it to your computer, or just download the ‘binary’ and run it directly. Create a new session for use with Artemis as follows:\n\nFill in the connection details:\n\n\nHost Name: hpc.sydney.edu.au\nPort: 22\nConnection type: SSH\n\n\n\nName this session “Artemis” and click ‘Save’\n\n\n\n\nInstall Ubuntu or some other Linux distro on the Windows Subsystem for Linux see here for details. This one will give you the full suite of Linux functions.\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "setup.html#a.-linux-systems",
    "href": "setup.html#a.-linux-systems",
    "title": "Setup",
    "section": "",
    "text": "If you use Linux, then chances are you already know your shell and how to use it. Basically, just open your preferred terminal program and off you go! An X-Window server (X11) may also be useful if you want to be able to use GUIs; again, if you’re using Linux you probably have one, and if you don’t have one, it’s probably because you intentionally disabled it!\nConnection to Artemis can be made via ssh by issuing the following command on the shell:\nssh -X &lt;unikey&gt;@hpc.sydney.edu.au"
  },
  {
    "objectID": "setup.html#b.-osx-mac-computers-and-laptops",
    "href": "setup.html#b.-osx-mac-computers-and-laptops",
    "title": "Setup",
    "section": "",
    "text": "Mac operating systems come with a terminal program, called Terminal. Just look for it in your Applications folder, or hit Command-Space and type ‘terminal’.\n\n\n\nTerminal is OSX’s native terminal emulator.\n\n\n\nWe also recommend installing XQuartz, which will replace OSX’s native X-Window server. XQuartz has some extra features that may offer better performance when using GUI programs. You’ll need to log out and back in again after installing XQuartz in order for it to activate.\nConnection to Artemis can be made via ssh by issuing the following command in the terminal:\nssh -X &lt;unikey&gt;@hpc.sydney.edu.au"
  },
  {
    "objectID": "setup.html#c.-windows",
    "href": "setup.html#c.-windows",
    "title": "Setup",
    "section": "",
    "text": "If you’re using a Windows machine, don’t panic! You might not have used ‘CMD’ since Windows 95 but, rest assured, Windows still has a couple of terminal programs and shells buried in the Programs menu. However, those aren’t going to work for us, as you’ll need extra programs and utilities to connect to Artemis, such as an SSH implementation. To use Artemis on Windows, you have a couple of options:\n\n\nPuTTY, an SSH and telnet client, is another good simple option. However, note that PuTTY does not provide an X11 server, so you won’t be able to use GUI programs on Artemis with just PuTTY.\nHead to the PuTTY Website and download PuTTY. You can install it to your computer, or just download the ‘binary’ and run it directly. Create a new session for use with Artemis as follows:\n\nFill in the connection details:\n\n\nHost Name: hpc.sydney.edu.au\nPort: 22\nConnection type: SSH\n\n\n\nName this session “Artemis” and click ‘Save’\n\n\n\n\nInstall Ubuntu or some other Linux distro on the Windows Subsystem for Linux see here for details. This one will give you the full suite of Linux functions."
  },
  {
    "objectID": "notebooks/03_artemis.html",
    "href": "notebooks/03_artemis.html",
    "title": "Running AlphaFold on the Artemis HPC",
    "section": "",
    "text": "Running AlphaFold on the Artemis HPC\n\nQuestions\n\nHow do I run AlphaFold on Artemis?\nHow can I modify a template AlphaFold job?\n\n\n\n\nHow do I run AlphaFold on Artemis?\nAlphaFold can be accessed by executing\nmodule load alphafold\nMany of the databases are installed in /project/data/alphafold. If there is additional databases you require, please fill in a support ticket.\n\n\nHow can I modify a template AlphaFold job?\nMake a new file called alpha_job.pbs.\n#!/bin/bash\n#PBS -P Training\n#PBS -l select=1:ncpus=4:mem=8gb:ngpus=0\n#PBS -l walltime=00:10:00\n#PBS -N alphafold2_job\n\n# Load necessary modules \n(on Artemis, this will load the correct python environment with AlphaFold installed)\nmodule load alphafold2\n\n# Navigate to the AlphaFold2 directory\ncd /project/Training/ALPHAFOLD\n\n# Run the AlphaFold2 prediction command\npython run_alphafold2.py \\\n  --input /project/Training/ALPHAFOLD/input.fasta \\\n  --output /path/to/output_directory \\\n  --model /project/data/alphafold\n  --parameters /path/to/alphafold2_parameters\n\nNow submit the job to the queue\nqsub alpha_job.pbs\nThe search parameters for AlphaFold2 can vary depending on the specific requirements and goals of the protein structure prediction. Here are some typical search parameters that can be adjusted:\n\nInput Sequence:\nThe input sequence is the protein sequence for which the structure is being predicted. It is usually provided in FASTA format.\nModel Selection:\nAlphaFold2 offers different models for protein structure prediction. Users can choose the most suitable model based on factors such as speed, accuracy, or specific application requirements.\nConfidence Threshold:\nAlphaFold2 assigns confidence scores to its predictions. Users can set a confidence threshold to filter the predicted structures based on their confidence level. Structures with confidence scores below the threshold may be discarded or further analyzed separately.\nTemplate Selection:\nAlphaFold2 utilizes known protein structures, called templates, to aid in its predictions. Users can specify the criteria for template selection, such as sequence similarity or structural homology, to guide the prediction process.\nEnergy Minimization:\nAfter generating the initial structure predictions, AlphaFold2 can perform energy minimization to refine the predicted structures. Users can specify the parameters for energy minimization, such as the force field or optimization algorithm.\nResidue Range:\nIn some cases, users may want to limit the prediction to a specific range of residues within the protein sequence. This can be useful when focusing on particular regions of interest or dealing with large proteins.\nOutput Format:\nAlphaFold2 can provide the predicted structures in various formats, such as PDB (Protein Data Bank) or mmCIF (macromolecular Crystallographic Information File). Users can specify the desired output format based on their downstream analysis or visualization needs. \n\nThese are just a few examples of the typical search parameters that can be adjusted when using AlphaFold2. The specific parameters used will depend on the objectives of the protein structure prediction and the available options provided by the AlphaFold2 software or interface being used.\npython run_alphafold2.py \\\n  --input input.fasta \\\n  --output output_directory \\\n  --model alphafold2_model \\\n  --parameters alphafold2_parameters \\\n  --cpu 4 \\\n  --max_template_date 2022-01-01 \\\n  --min_covered_residues 0.8 \\\n  --max_recursion_depth 3 \\\n  --max_hours 0.08\nIn this example:\n\n--input input.fasta specifies the input FASTA file containing the protein sequence to be predicted.\n--output output_directory specifies the directory where the output files will be saved.\n--model alphafold2_model points to the AlphaFold2 model to be used for prediction.\n--parameters alphafold2_parameters specifies the path to the AlphaFold2 parameters.\n--cpu $NCPUS sets the number of CPUs to be used for the prediction to 4.\n--max_template_date 2022-01-01 restricts the use of templates that were released before January 1, 2022.\n--min_covered_residues 0.8 specifies that at least 80% of the protein sequence must have template coverage for a template to be used.\n--max_recursion_depth 3 limits the recursion depth during template searching to 3.\n--max_hours 0.08 sets the maximum runtime for the prediction to 0.08 hours\n\n\n\n\n\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "notebooks/07_colabfold.html",
    "href": "notebooks/07_colabfold.html",
    "title": "Running AlphaFold with ColabFold on Google Colab",
    "section": "",
    "text": "What is Google Colab and ColabFold?\nHow do I run AlphaFold with ColabFold?\nWhat are the limitations?\n\n\n\n\n\n\n\n\n\n\nGo here and follow the instructions! https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "notebooks/07_colabfold.html#how-do-i-run-alphafold-with-colabfold",
    "href": "notebooks/07_colabfold.html#how-do-i-run-alphafold-with-colabfold",
    "title": "Running AlphaFold with ColabFold on Google Colab",
    "section": "",
    "text": "Go here and follow the instructions! https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb"
  },
  {
    "objectID": "notebooks/06_aws.html",
    "href": "notebooks/06_aws.html",
    "title": "Running AlphaFold on the the Sydney Research Cloud (Ronin AWS)",
    "section": "",
    "text": "Running AlphaFold on the the Sydney Research Cloud (Ronin AWS)\n\nQuestions\n\nWhat can I do?\nHow do I do it?\n\n\n\nObjectives\n\nLearn the basic Unix commands\n\n\n# I am a comment\npwd\n\nfor i in $(seq 1 10); do echo $i;done\n\nChallenge\nThis is a challenge question\n\n\nSolution\n\n\n#Declare the name of the function\necho \"Joy\"\n\n\n\nKey points\n\nKey\nPoints\nHere\n\n\n\n\n\n\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "notebooks/04_singularity.html",
    "href": "notebooks/04_singularity.html",
    "title": "Running AlphaFold in a Docker/Singularity Container",
    "section": "",
    "text": "Running AlphaFold in a Docker/Singularity Container\n\nQuestions\n\nWhat can I do?\nHow do I do it?\n\n\n\nObjectives\n\nLearn the basic Unix commands\n\n\n# I am a comment\npwd\n\nfor i in $(seq 1 10); do echo $i;done\n\nChallenge\nThis is a challenge question\n\n\nSolution\n\n\n#Declare the name of the function\necho \"Joy\"\n\n\n\nKey points\n\nKey\nPoints\nHere\n\n\n\n\n\n\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "AlphaFold",
    "section": "",
    "text": "This is a training course aimed at users wishing to use High Performance Computing and Cloud environments to learn AlphaFold. AlphaFold performs predictions of protein structure.\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "index.html#trainers",
    "href": "index.html#trainers",
    "title": "AlphaFold",
    "section": "Trainers",
    "text": "Trainers\nHave a list of the people delivering the course if it is needed. However, this is subject to change so might be a good idea to not specifiy.\nHere’s an example list. This is a good place to define what your preferred name is if you have one.\n\nChristopher Le\nJake Chen\nNathaniel (Nate) Butterworth"
  },
  {
    "objectID": "index.html#course-pre-requisites-and-setup-requirements",
    "href": "index.html#course-pre-requisites-and-setup-requirements",
    "title": "AlphaFold",
    "section": "Course pre-requisites and setup requirements",
    "text": "Course pre-requisites and setup requirements\nNo previous programming experience is required, this training course will introduce you to fundamental Unix and HPC as required. Training will be delivered online, so you will need access to a modern computer with a stable internet connection. Participants will require the Sydney VPN and a terminal client (as per the Setup Instructions provided)."
  },
  {
    "objectID": "index.html#venue",
    "href": "index.html#venue",
    "title": "AlphaFold",
    "section": "Venue",
    "text": "Venue\nTBD, online? In almost all cases, our courses are delivered from Sydney and times are reported in AEST (GMT+10).\n\nZoom etiquette and how we interact\nSessions will be recorded and added to this page. Please interrupt whenever you want! Ideally, have your camera on and interact as much as possible. There will be someone monitoring the chat-window for any questions you would like to post there. Extending for a three-hour duration, our Zoom session incorporates regular breaks and a blend of demonstrative and hands-on material."
  },
  {
    "objectID": "index.html#code-of-conduct",
    "href": "index.html#code-of-conduct",
    "title": "AlphaFold",
    "section": "Code of Conduct",
    "text": "Code of Conduct\nAs a University of Sydney course, we also want to make sure peopele are aware of our code of conduct. Feel free to move this to an about page as needed.\nExample standard Code of Conduct statement:\nWe expect all attendees of our training to follow our code of conduct, including bullying, harassment and discrimination prevention policies.\nIn order to foster a positive and professional learning environment we encourage the following kinds of behaviours at all our events and on our platforms:\n\nUse welcoming and inclusive language\nBe respectful of different viewpoints and experiences\nGracefully accept constructive criticism\nFocus on what is best for the community\nShow courtesy and respect towards other community members\n\nOur full CoC, with incident reporting guidelines, is available Here."
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "AlphaFold",
    "section": "Schedule",
    "text": "Schedule\nIf your training includes multiple components, it is always nice to have a table with the schedule. With quarto we can make tables using markdown formating, like below.\n\n\n\nIntro\n\n\n\n\nIntro to AlphaFold\n\n\n\nIntro to HPC\n\n\n\nArtemis Example\n\n\nAdvanced\n\n\n\n\nSingularity Example\n\n\n\nNCI Example\n\n\n\nRonin Research Cloud (AWS) Example\n\n\n\nColabFold\n\n\n\nBiocommons Example"
  },
  {
    "objectID": "index.html#setup-instructions",
    "href": "index.html#setup-instructions",
    "title": "AlphaFold",
    "section": "Setup Instructions",
    "text": "Setup Instructions\nPlease attempt to complete the Setup Instructions before the course. We will run through this in the course too."
  },
  {
    "objectID": "CHEATSHEET.html",
    "href": "CHEATSHEET.html",
    "title": "Quarto template cheatsheet",
    "section": "",
    "text": "Quarto template cheatsheet\nPlease contribute your tips, tricks for use, customisation of this template :)\n\n\n\n\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "notebooks/01_alphafold.html",
    "href": "notebooks/01_alphafold.html",
    "title": "Introduction to AlphaFold2",
    "section": "",
    "text": "AlphaFold2 is a groundbreaking artificial intelligence system developed by DeepMind that focuses on predicting the three-dimensional structure of proteins. Proteins are essential molecules in our bodies that carry out various functions, and their structure plays a critical role in understanding their behavior and function.\nAlphaFold2 utilizes deep learning algorithms to analyze the amino acid sequence of a protein and predict its 3D structure accurately. By understanding the structure of proteins, scientists can gain insights into how they interact with other molecules, such as drugs, and how they function in biological processes. This knowledge can have profound implications for various fields, including medicine, drug discovery, and bioengineering.\nThe traditional methods for determining protein structures, such as X-ray crystallography and cryo-electron microscopy, can be time-consuming and expensive. AlphaFold2 significantly accelerates this process by providing accurate predictions in a fraction of the time. Its predictions have shown remarkable accuracy, comparable to experimental methods.\nBy providing researchers with reliable protein structure predictions, AlphaFold2 has the potential to revolutionize our understanding of biology and accelerate scientific discoveries. It can aid in designing more effective drugs, understanding disease mechanisms, and developing enzymes for industrial applications. Ultimately, AlphaFold2’s advancements in protein folding have the potential to transform multiple areas of research and have a profound impact on human health and well-being.\nThe original AlphaFold was introduced in 2018 and utilized deep learning techniques to predict protein structures. It made significant advancements in protein folding predictions compared to previous methods but still had limitations in accuracy.\nAlphaFold2, introduced in 2020, represents a major breakthrough in protein structure prediction. It incorporates novel algorithmic improvements and advanced machine learning techniques, including a deep neural network architecture, to significantly improve accuracy. AlphaFold2 achieved remarkable performance in the Critical Assessment of Structure Prediction (CASP) competition in 2020, outperforming other methods and approaching experimental accuracy for many protein structures.\nAlphaFold2 is much faster than its predecessor. The original AlphaFold required significant computational resources and time to generate structure predictions. In contrast, AlphaFold2 is significantly optimized and can deliver predictions within a matter of days, or even hours, for many proteins. Moreover, AlphaFold2 has been designed with scalability in mind. It can efficiently utilize distributed computing resources, enabling multiple protein structure predictions to be processed simultaneously.\nAlphaFold2 incorporates an attention mechanism that allows it to focus on relevant parts of the protein sequence when making predictions. This attention mechanism provides insights into the model’s decision-making process and makes it more interpretable than the original AlphaFold.\n\n\nThe AlphaFold2 Protein Structure Database is accessed through a web browser, allowing users to submit protein sequences and receive predicted structures via an online interface. It provides a user-friendly graphical interface that makes it accessible to non-experts and researchers without extensive programming or command line experience.\nThe AlphaFold2 Protein Structure Database is primarily intended for users who want to obtain protein structure predictions quickly and conveniently without the need for complex setups. Users can submit protein sequences, and the database provides predicted structures as outputs. It offers a straightforward interface with pre-defined settings and options.\n\n\n\nThe command line AlphaFold2 application is a software package that runs on a local machine or server. It is designed for advanced users and researchers familiar with command line interfaces and programming. It requires installation and configuration, but it offers more flexibility and control over the prediction process.\nIt is customizable and allows researchers to fine-tune the prediction process according to their specific requirements. It provides a wide range of command line options and parameters that can be modified to optimize predictions. This level of control is beneficial for researchers who want to experiment with different settings or integrate AlphaFold2 into their existing computational pipelines.\nThis course is aimed at researchers seeking to automate their use of AlphaFold. See the following pages for examples for how to use AlphaFold in different conditions and on different systems. Whilst these are targetted for Sydney University researchers, others may benefit from the general routines.\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "notebooks/01_alphafold.html#manual-database-search",
    "href": "notebooks/01_alphafold.html#manual-database-search",
    "title": "Introduction to AlphaFold2",
    "section": "",
    "text": "The AlphaFold2 Protein Structure Database is accessed through a web browser, allowing users to submit protein sequences and receive predicted structures via an online interface. It provides a user-friendly graphical interface that makes it accessible to non-experts and researchers without extensive programming or command line experience.\nThe AlphaFold2 Protein Structure Database is primarily intended for users who want to obtain protein structure predictions quickly and conveniently without the need for complex setups. Users can submit protein sequences, and the database provides predicted structures as outputs. It offers a straightforward interface with pre-defined settings and options."
  },
  {
    "objectID": "notebooks/01_alphafold.html#automation",
    "href": "notebooks/01_alphafold.html#automation",
    "title": "Introduction to AlphaFold2",
    "section": "",
    "text": "The command line AlphaFold2 application is a software package that runs on a local machine or server. It is designed for advanced users and researchers familiar with command line interfaces and programming. It requires installation and configuration, but it offers more flexibility and control over the prediction process.\nIt is customizable and allows researchers to fine-tune the prediction process according to their specific requirements. It provides a wide range of command line options and parameters that can be modified to optimize predictions. This level of control is beneficial for researchers who want to experiment with different settings or integrate AlphaFold2 into their existing computational pipelines.\nThis course is aimed at researchers seeking to automate their use of AlphaFold. See the following pages for examples for how to use AlphaFold in different conditions and on different systems. Whilst these are targetted for Sydney University researchers, others may benefit from the general routines."
  },
  {
    "objectID": "notebooks/02_hpc.html",
    "href": "notebooks/02_hpc.html",
    "title": "Introduction to the High Performance Computer",
    "section": "",
    "text": "Introduction to the High Performance Computer\n\nQuestions\n\nWhat is a HPC?\nWhy can’t I run alphafold locally?\n\n\n\n\nWhat is a HPC?\nHPC stands for ‘High Performance Computing’, our local HPC is called “Artemis”. You might colloquially refer to Artemis as a ‘supercomputer’. Technically, Artemis is a computing cluster, which is a whole lot of individual computers networked together. AS of 2023, Artemis consists of:\n* 7,636 cores (CPUs)\n* 45 TB of RAM\n* 108 NVIDIA V100 GPUs\n* 378 TB of storage\n* 56 Gbps FDR InfiniBand (networking)\nArtemis computers (which we call machines or nodes) run a Linux operating system, ‘CentOS’ v6.10. Computing performed on Artemis nodes is managed by a scheduler, and ours is an instance of PBS Pro.\nArtemis is ideal for calculations that require:\n* A long time to complete (long walltime)\n* High RAM usage\n* Big data input or outputs\n* Are able to use multiple cores or nodes to run in parallel, and hence much faster\nArtemis is available free of charge to all University of Sydney researchers. You do need a unikey, and a valid Research Dashboard Research Data Management Plan with Artemis access enabled.\nArtemis is also a great incentive to funding bodies to view your projects favourably – as they know you have the resources required to get the work done.\nFinally, if you do use Artemis for your research, please acknowledge us! This ensures that we continue to get the funding we need to provide you with what is really a first-grade computing resource. A suggested acknowledgment might say:\n\nThe authors acknowledge the Sydney Informatics Hub and the University of Sydney’s high performance computing cluster, Artemis, for providing the computing resources that have contributed to the results reported herein.\n\n\nConnecting to Artemis\nConnections to Artemis are remote connections – you’ll never sit at one of Artemis’ machines, which are stored in a secure data-centre in Western Sydney. Instead, you connect remotely into one of Artemis’ login nodes. Login nodes are Artemis machines that don’t perform any actual computing jobs, but simply provide users with an access gateway to Artemis’ filesystems and the PBS Pro job scheduler.\nYou can thus connect to Artemis from anywhere, requiring only a terminal emulator with an SSH client. (If you’re not on the USyd network (ie off-campus), you’ll also need to connect to the University’s VPN.\nIf you followed the Setup instructions, then you should already have the required software installed. If not, please go do this now!\n\n\n\n\n\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "notebooks/08_biocommons.html",
    "href": "notebooks/08_biocommons.html",
    "title": "Running AlphaFold on Biocommons Galaxy",
    "section": "",
    "text": "Running AlphaFold on Biocommons Galaxy\n\nQuestions\n\nWhat can I do?\nHow do I do it?\n\n\n\nObjectives\n\nLearn the basic Unix commands\n\n\n# I am a comment\npwd\n\nfor i in $(seq 1 10); do echo $i;done\n\nChallenge\nThis is a challenge question\n\n\nSolution\n\n\n#Declare the name of the function\necho \"Joy\"\n\n\n\nKey points\n\nKey\nPoints\nHere\n\n\n\n\n\n\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  },
  {
    "objectID": "notebooks/05_nci.html",
    "href": "notebooks/05_nci.html",
    "title": "Running AlphaFold on NCI Gadi HPC",
    "section": "",
    "text": "Running AlphaFold on NCI Gadi HPC\n\nQuestions\n\nWhat can I do?\nHow do I do it?\n\n\n\nObjectives\n\nLearn the basic Unix commands\n\n\n# I am a comment\npwd\n\nfor i in $(seq 1 10); do echo $i;done\n\nChallenge\nThis is a challenge question\n\n\nSolution\n\n\n#Declare the name of the function\necho \"Joy\"\n\n\n\nKey points\n\nKey\nPoints\nHere\n\n\n\n\n\n\nAll materials copyright Sydney Informatics Hub, University of Sydney"
  }
]